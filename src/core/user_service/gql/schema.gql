type Query {
    user(id: String!): User
}

#-----------------[ WRITING USER ]-----------------#
type Mutation {
    register(user_name: String!, email: String!, password: String!): loginRegister
}

type loginRegister {
    token: String!
    user: User
}
#---------------------[ END ]----------------------#

#-----------------[ READING USER ]-----------------#

# Root user object
type User {
    _id: String

    user_name: String
    language: String
    profile_picture: String

    permissions: User_Permissions
    security_info: User_Security
    content: [User_Content]
}

type User_Permissions {
    roles: [String]
}

type User_Security {
    last_login: Int
    signup_ip: String
    account_locked: Boolean
    attempts: Int
    last_email: Int
    account_creation: Int
    email_verified: Boolean
    login_attempts: [User_Login_Attempts]
}

type User_Login_Attempts {
    ip: String
    timestamp: Int
    succsess: Boolean
}

type User_Content {
    _id: String
    type: String
}

#---------------------[ END ]----------------------#